openapi: 3.0.1
info:
  title: Authentication API
  description: API for user authentication with register, login, and token validation.
  version: 1.0.0
servers:
  - url: http://localhost:8000
    description: Local development server
  - url: https://backend-dot-submission-mgce-rizkinugraha.et.r.appspot.com
    description: Production server
paths:
  /auth/register:
    post:
      summary: Register a new user
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: user123
                password:
                  type: string
                  example: secret123
      responses:
        '201':
          description: User registered successfully
        '400':
          description: User already exists
        '500':
          description: Internal server error

  /auth/login:
    post:
      summary: Login a user
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: user123
                password:
                  type: string
                  example: secret123
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: succes
                  token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9
        '401':
          description: Invalid credentials
        '500':
          description: Internal server error

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
